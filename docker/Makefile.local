# -*- makefile -*-
# Copyright (c) 2021-2023, Jani Nikula <jani@nikula.org>
# Licensed under the terms of BSD 2-Clause, see LICENSE for details.

docker_dir := docker

HAWKMOTH_VERSION := $(shell cat src/hawkmoth/VERSION)
HAWKMOTH_ARCHIVE := $(docker_dir)/hawkmoth-$(HAWKMOTH_VERSION).tar.gz

INSIDE_WORK_TREE := $(shell git rev-parse --is-inside-work-tree 2>/dev/null)

ifeq ($(INSIDE_WORK_TREE),true)
$(HAWKMOTH_ARCHIVE): $(shell git ls-files)
	@test -z "$(shell git status --porcelain --untracked-files=no)" || \
		(echo "error: git work tree is not clean" && false)
	git archive -o $@ HEAD
else
$(HAWKMOTH_ARCHIVE): FORCE
	@echo "error: git not available or not inside a git work tree" && false
endif

# Containers for local testing
DOCKER_TEST_OUT_MOUNT = --mount type=bind,src=$(PWD)/doc/_build,dst=/out

hawkmoth-test.%: $(HAWKMOTH_ARCHIVE) FORCE
	docker build --file $(docker_dir)/Dockerfile$(suffix $@) --build-arg UID=$(shell id -u) --build-arg GID=$(shell id -g) --build-arg ARCHIVE=$< --tag $@ .

docker-test.%: hawkmoth-test.% FORCE
	docker run $< make test

docker-check.%: hawkmoth-test.% FORCE
	docker run $< make check

docker-html.%: hawkmoth-test.% FORCE
	mkdir -p doc/_build
	docker run $(DOCKER_TEST_OUT_MOUNT) $< make BUILDDIR=/out html

# Generate targets for auto-completion
$(shell find $(docker_dir) -name 'Dockerfile.*' | sed 's/.*\.\(.*\)/docker-test.\1 docker-check.\1 docker-html.\1/'):

FORCE:

CLEAN := $(CLEAN) $(HAWKMOTH_ARCHIVE)
